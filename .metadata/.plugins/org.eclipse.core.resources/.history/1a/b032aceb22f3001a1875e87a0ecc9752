package programmers;

import java.util.Arrays;
import java.util.PriorityQueue;

public class diskController {
	public static void main(String[] args) {

		int jobs[][] = {{0,3},{1,9},{2,6}};
		
		new diskCtlSoultion().solution(jobs);
	}
}

class diskCtlSoultion{
	public int solution(int[][] jobs) {
		int answer = 0;
		int finExec = jobs[0][1];
		
		PriorityQueue<int[]> readyQu = new PriorityQueue<int[]>();
		
		PriorityQueue<int[]> waitQu;  
		
		
		waitQu = new PriorityQueue<int[]>((a,b)->(a[0] - b[0]));
		
		for(int i = 1 ; i < jobs.length; i++) {
			waitQu.add(jobs[i]);
		}
		
		while(!waitQu.isEmpty()) {
			
			int[] temp = waitQu.poll();
			
			if(temp[1] < finExec) {
				readyQu.add(temp);
			}
			
		}
	
	
	
		
		if(jobs[i][0] <= finExec) waitQu.add(jobs[i]);
		System.out.println(Arrays.toString(waitQu.poll()));
		
		
		
		return answer;
	}
}