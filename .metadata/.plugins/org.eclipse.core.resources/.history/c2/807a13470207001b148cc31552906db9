package programmersTest;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Deque;
import java.util.PriorityQueue;

public class Level3 {
	public static void main(String[] args) {

		int n = 5;
		int[][] results = { { 4, 3 }, { 4, 2 }, { 3, 2 }, { 1, 2 }, { 2, 5 } };

		System.out.println(new Level3Solution().solution(n, results));
	}
}

class Level3Solution {
	public int solution(int n, int[][] results) {
		int answer = 0;

		
		int[][] score = new int[n+1][n+1];
		
		for(int i = 0 ; i < results.length ; i++) {
			score[results[i][0]][results[i][1]] = 1;
			score[results[i][1]][results[i][0]] = -1;
		}
		
		for(int i = 0 ; i < score.length ; i++	) {
			
			System.out.println(Arrays.toString(score[i]));
			
		
		}
		
		for(int i = 1 ; i <= n ; i++) {
			boolean[] visited = new boolean[n];
			ArrayList<Integer> list = new ArrayList<Integer>();
			visited[i] = true;
			list.add(i);
			
			for(int j = 1 ; j <= n ; j++) {
				if(!visited[i]) {
					if(score[i][j] == -1) {
						
					}
				}
			}
			
		}
		
		return answer;
	}
	
	void cal(int num, int result, ArrayList<Integer> list, boolean[] visited ) {
		
		
	}
	
}
